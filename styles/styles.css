article,aside,details,figcaption,figure,footer,header,hgroup,nav,section,summary{display:block;}audio,canvas,video{display:inline-block;}audio:not([controls]){display:none;height:0;}[hidden]{display:none;}html{font-family:sans-serif;-webkit-text-size-adjust:100%;-ms-text-size-adjust:100%;}a:focus{outline:thin dotted;}a:active,a:hover{outline:0;}h1{font-size:2em;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:700;}dfn{font-style:italic;}mark{background:#ff0;color:#000;}code,kbd,pre,samp{font-family:monospace, serif;font-size:1em;}pre{white-space:pre-wrap;word-wrap:break-word;}q{quotes:\201C \201D \2018 \2019;}small{font-size:80%;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sup{top:-.5em;}sub{bottom:-.25em;}img{border:0;}svg:not(:root){overflow:hidden;}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em;}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;}button,input{line-height:normal;}button,html input[type=button],/* 1 */
input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer;}button[disabled],input[disabled]{cursor:default;}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0;}input[type=search]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none;}textarea{overflow:auto;vertical-align:top;}table{border-collapse:collapse;border-spacing:0;}body,figure{margin:0;}legend,button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}
* { -moz-box-sizing: border-box; -webkit-box-sizing: border-box; box-sizing: border-box; }

/* -------------------------------------------------------------------------------------------------------------- */

/* BASE STYLING ALREADY DONE FOR YOU  */
html{
    font-size: 125%;
}
body{
    font-family: 'Open Sans', sans-serif;
    font-size: 1rem;
}
header{
    background-image: url(../assets/larm-rmah-273854-unsplash.jpg);
    background-size: cover;
    min-height: 100vh;
    padding-bottom: 70px;
}
img{ 
    width: 100%;
    height: auto;
    display: auto;
}
h1, h2{
    text-align: center;
    margin: 0;
    color: white;
    font-family: 'Playfair Display', serif;
}
h1{
    font-size: 2.5rem;
    width: 80%;
    margin: 0px auto;
    padding: 70px 0px;
}

.feedbackForm{
    background: #efefef;
    padding: 40px;
    width: 95%;
    margin: 0 auto;
    border-radius: 20px;
    display: flex;
    flex-direction: column;
    align-items: center;
}
button {
    background-color: #ED6B55;
    color: #202020;
    border: none; 
    padding: 20px;
    width: 200px;
    margin: 40px auto 0;
    display: block;
    text-align: center;
    color: inherit; 
    text-decoration: none;
}

.tabs label{
    display: inline-block;
    font-family: 'Playfair Display', serif;
    letter-spacing: 0.5px;
    padding: 15px 25px;
    color: #afafaf;
}

/* ------------------------------------------------------------------------------------------------------ */
/* WRITE YOUR CSS HERE */


/* Colors 

Dark Green - #1f2d2e
Light Green - #234534
Orange - #ED6B55
 */

.toggleLabel {
    line-height: 40px;
    padding-right: 100px;
    margin: 15px 0;

    /* to pair with the absolute styling in the toggleLabel::before */
    position: relative;
}

/* let's create the toggle shape, positioned always to the right of the label (its parent element 
Before means wherever we have X element (in this case the .taggleLabel), we should have this element before it */
.toggleLabel::before {
    /* when we create a before element, we have to have content, even if it's empty */
    content:"";
    /* making the general dimensions of the 'box' */
    width: 80px;
    height: 40px;
    background-color: #1f2d2e;
    /* we want these things to be a certain direction based on where the text is - we want it to the right of the text no matter what. 
    
    Position: absolute means based on the position of something else (its parent which we style position: relative) , we want this to be somewhere in particular */
    display:block;
    position: absolute;
    right: 0; 
    /* aka immediately to the right of the labels */
    border-radius: 100px;
}

/* let's create the white circle for the toggle */
.toggleLabel::after {
    /* make the shape */
    content:"";
    width: 30px;
    height: 30px;
    background-color:white;
    border-radius: 50%;

    /* so it can take with and height, add display block and position it (remember we already made the parent element relative*/
    display:block;
    position:absolute;

    /* hint: use the dev tools and up/down arrows to test out positioning an element */
    right: 45px;
    top: 5px;
}


input[type="checkbox"]{
    /* has the checkbox give up their footprint */
    position: absolute;
    /* makes them invisible altogether - they're still hanging out in the 'keeping' text word. Another way is to position them waaaay outside of the page*/
    opacity: 0;
}

input[type="checkbox"]:checked + .toggleLabel::after {
    right: 5px;
}

/* when our toggle label is active or focused (for accessibility) it will change color */

input[type="checkbox"]:active +.toggleLabel::before, 
input[type="checkbox"]:focus +.toggleLabel::before {
    background-color: #ED6B55;
}